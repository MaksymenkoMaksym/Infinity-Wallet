{"version":3,"file":"static/js/814.84543f02.chunk.js","mappings":"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","sources":["components/ButtonAddTransactions/ButtonAddTransactions.styled.js","components/ButtonAddTransactions/ButtonAddTransactions.jsx","components/MediaWraper/MediaWraper.jsx","components/ModalAddTransactions/ModalAddTransactions.styled.js","components/ModalAddSwitch/ModalAddSwitch.styled.js","components/ModalAddSwitch/ModalAddSwitch.jsx","components/ModalAddSelect/ModalAddSelect.jsx","components/ModalAddDatePicker/ModalAddDatePicker.styled.js","components/ModalAddDatePicker/ModalAddDatePicker.jsx","components/ModalAddTransactions/ModalAddTransactions.jsx","utility/validationSchema.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AddBtn = styled.button`\n  position: ${props => (props.icon === 'plus' ? 'fixed' : 'initial')};\n  bottom: 20px;\n  right: 20px;\n  width: 44px;\n  height: 44px;\n  background-color: ${p => {\n    switch (p.icon) {\n      case 'edit':\n        return p.theme.colors.black;\n      case 'delete':\n        return p.theme.colors.pink;\n      default:\n        return p.theme.colors.green;\n    }\n  }};\n  border-radius: ${p => p.theme.radii.round};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  z-index: 50;\n  @media screen and (min-width: 768px) {\n    right: 40px;\n    bottom: 40px;\n  }\n`;\nexport const Icon = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: #ffffff;\n`;\n","import { AddBtn, Icon } from './ButtonAddTransactions.styled';\nimport sprite from '../../assets/images/icons.svg';\n\nconst ButtonAddTransactions = ({ onClickAction, icon }) => {\n  return (\n    <AddBtn\n      onClick={() => {\n        onClickAction();\n      }}\n      icon={icon}\n    >\n      <Icon>\n        <use href={`${sprite}#icon-${icon}`}></use>\n      </Icon>\n    </AddBtn>\n  );\n};\n\nexport default ButtonAddTransactions;\n","import PropTypes from 'prop-types';\nimport MediaQuery from 'react-responsive';\n\nconst Mob = ({ children }) => {\n  return <MediaQuery maxWidth={767}>{children}</MediaQuery>;\n};\nconst Tab = ({ children }) => {\n  return <MediaQuery minWidth={768}>{children}</MediaQuery>;\n};\nconst Desc = ({ children }) => {\n  return <MediaQuery minWidth={1280}>{children}</MediaQuery>;\n};\n\nMob.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nTab.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nDesc.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport { Mob, Tab, Desc };\n","// import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 1200;\n  margin-top: 60px;\n  overflow-y: auto;\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    padding-top: 60px;\n  }\n`;\n\nexport const Modal = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  height: 100%;\n  background-color: ${p => p.theme.colors.background.white};\n  /* padding: 20px; */\n  @media screen and (min-width: 768px) {\n    width: 540px;\n    height: auto;\n    min-height: 400px;\n    max-height: 700px;\n    padding: 40px 80px;\n    border-radius: ${p => p.theme.radii.md};\n  }\n`;\n\nexport const AddForm = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  width: 280px;\n  @media screen and (min-width: 768px) {\n    width: 394px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  font-family: ${p => p.theme.fonts.secondary};\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  line-height: ${p => p.theme.lineHeights.main};\n  text-align: center;\n  padding-bottom: 50px;\n`;\nexport const Button = styled.button`\n  width: 300px;\n  height: 50px;\n  padding: 0;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.green};\n  border: 1px solid ${p => p.theme.colors.green};\n  border-radius: 20px;\n  letter-spacing: 0.1rem;\n  font-size: 18px;\n  line-height: 1.5;\n`;\nexport const CancelButton = styled(Button)`\n  background-color: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.blue};\n  border: 1px solid ${p => p.theme.colors.blue};\n`;\nexport const IconBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\nexport const SwitchIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: ${p => p.theme.colors.white};\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 32px;\n  border: none;\n  outline: none;\n  /* padding-left: 20px; */\n  border-bottom: 1px solid ${p => p.theme.colors.grayIcon};\n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n  /* margin-bottom: 40px; */\n  &:hover {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n  &:focus {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n`;\nexport const SwitchLabel = styled.label`\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 50px;\n`;\nexport const SwitchText = styled.span`\n  color: ${p => p.inputColor};\n\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\nexport const Comment = styled.p`\n  margin: 0;\n  padding-left: 20px;\n  color: ${p => p.theme.colors.gray};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n`;\nexport const CloseBox = styled.button`\n  position: absolute;\n  display: block;\n  top: 20px;\n  right: 20px;\n  padding: 0;\n  border: none;\n  background: transparent;\n`;\nexport const CloseIcon = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  fill: ${p => p.theme.colors.black};\n`;\n\nexport const DateSumWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\nexport const SumInput = styled(Input)`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    width: 181px;\n    margin-bottom: 0px;\n  }\n`;\nexport const CommentLabel = styled.label`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  width: 100%;\n`;\nexport const HeaderBox = styled.div`\n  width: 100%;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 32px;\n  border: none;\n  outline: none;\n  /* padding-left: 20px; */\n  border-bottom: 1px solid ${p => p.theme.colors.grayIcon};\n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n  /* margin-bottom: 40px; */\n  &:hover {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n  &:focus {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n`;\nexport const IconBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\nexport const SwitchIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: ${p => p.theme.colors.white};\n`;\nexport const SwitchLabel = styled.label`\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 50px;\n`;\nexport const SwitchText = styled.span`\n  color: ${p => p.inputColor};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\nexport const Comment = styled.p`\n  margin: 0;\n  padding-left: 20px;\n  color: ${p => p.theme.colors.gray};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n`;\nexport const CloseBox = styled.button`\n  position: absolute;\n  display: block;\n  top: 20px;\n  right: 20px;\n  padding: 0;\n  border: none;\n  background: transparent;\n`;\nexport const CloseIcon = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  fill: ${p => p.theme.colors.black};\n`;\n\nexport const DataPickerWrapper = styled.label`\n  width: 280px;\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid ${p => p.theme.colors.grayIcon};\n  padding-bottom: 5px;\n  @media screen and (min-width: 768px) {\n    width: 181px;\n  }\n  &:hover {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n  &:focus {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n  & .react-datepicker {\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.normal};\n  }\n  & input {\n    border: none;\n    color: red;\n    width: 100%;\n    outline: none;\n    /* padding-left: 20px; */\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n  & .react-datepicker__day {\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n  & .react-datepicker__day--selected {\n    color: white;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    color: white;\n  }\n`;\nexport const DateIcon = styled.svg`\n  display: block;\n  width: 24px;\n  height: 24px;\n`;\nexport const DateSumWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\nexport const SumInput = styled(Input)`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    width: 181px;\n    margin-bottom: 0px;\n  }\n`;\nexport const CommentLabel = styled.label`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  width: 100%;\n`;\nexport const HeaderBox = styled.div`\n  width: 100%;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport Switch from 'react-switch';\nimport { modalIsIncome } from 'redux/transactions/transactionsSelectors';\nimport sprite from '../../assets/images/icons.svg';\nimport {\n  SwitchIcon,\n  IconBox,\n  SwitchLabel,\n  SwitchText,\n} from './ModalAddSwitch.styled';\nimport { setIsIncome } from 'redux/transactions/transactionsSlice';\n\nconst ModalAddSwitch = ({ values, setFieldValue }) => {\n  const isIncome = useSelector(modalIsIncome);\n  const dispatch = useDispatch();\n  const switchTextColor = () => {\n    return isIncome\n      ? { inc: '#24CCA7', exp: '#E0E0E0' }\n      : { inc: '#E0E0E0', exp: '#FF6596' };\n  };\n\n  return (\n    <SwitchLabel htmlFor=\"small-radius-switch\">\n      <SwitchText inputColor={switchTextColor().inc}>Income</SwitchText>\n      <Switch\n        name=\"type\"\n        value={values.type}\n        checked={values.type === 'EXPENSE'}\n        onChange={(checked, event) => {\n          setFieldValue('type', checked ? 'EXPENSE' : 'INCOME');\n          //   setIsIncome(prev => !prev);\n          dispatch(setIsIncome(!isIncome));\n          setFieldValue('category', checked ? values.category : '');\n        }}\n        handleDiameter={44}\n        offColor=\"#FF6596\"\n        onColor=\"#24CCA7\"\n        offHandleColor=\"#24CCA7\"\n        onHandleColor=\"#FF6596\"\n        height={40}\n        width={80}\n        border=\"\"\n        boxShadow=\"0px 0px 1px 2px #BDBDBD\"\n        activeBoxShadow=\"0px 0px 1px 2px #BDBDBD\"\n        uncheckedIcon={<div></div>}\n        uncheckedHandleIcon={\n          <IconBox>\n            <SwitchIcon>\n              <use href={`${sprite}#icon-plus`}></use>\n            </SwitchIcon>\n          </IconBox>\n        }\n        checkedIcon={<div></div>}\n        checkedHandleIcon={\n          <IconBox>\n            <SwitchIcon>\n              <use href={`${sprite}#icon-minus`}></use>\n            </SwitchIcon>\n          </IconBox>\n        }\n        className=\"react-switch\"\n        id=\"small-radius-switch\"\n      />\n      <SwitchText inputColor={switchTextColor().exp}>Expense</SwitchText>\n    </SwitchLabel>\n  );\n};\n\nexport default ModalAddSwitch;\n","import Select from 'react-select';\n\nconst ModalAddSelect = ({ options, setFieldValue, values }) => {\n  const customStyles = {\n    //випадаючий список\n    menu: provided => ({\n      //значення по дефолту\n      ...provided,\n      overflow: 'hidden',\n      backgroundColor: 'rgba(255, 255, 255, 0.7)',\n      boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n      backdropFilter: 'blur(25px)',\n      borderRadius: 20,\n      outline: 0,\n      // paddingLeft: '20px',\n    }),\n    // один зі списку\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n\n      color: state.isFocused ? '#FF6596' : '#000000',\n      padding: 20,\n      backgroundColor: state.isFocused ? 'white' : null,\n      cursor: 'pointer',\n    }),\n    //пошуковий рядок\n    control: (provided, state) => ({\n      ...provided,\n      width: '100%',\n      border: 0,\n      borderColor: state.isFocused ? 'transparent' : null,\n      borderBottom: '1px solid   #E0E0E0',\n      borderRadius: 0,\n      backgroundColor: 'transparent',\n    }),\n    placeholder: provided => ({\n      ...provided,\n      color: '#BDBDBD',\n    }),\n    container: (provided, state) => ({\n      ...provided,\n      width: '100%',\n    }),\n    indicatorSeparator: (provided, state) => ({\n      ...provided,\n      display: 'none',\n    }),\n  };\n\n  return (\n    <Select\n      value={values.category}\n      styles={customStyles}\n      onChange={data => {\n        setFieldValue('category', data);\n      }}\n      placeholder=\"Select category\"\n      options={options}\n      required\n    />\n  );\n};\n\nexport default ModalAddSelect;\n","import styled from 'styled-components';\n\nexport const DataPickerWrapper = styled.label`\n  width: 280px;\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid ${p => p.theme.colors.grayIcon};\n  padding-bottom: 5px;\n  @media screen and (min-width: 768px) {\n    width: 181px;\n  }\n  &:hover {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n  &:focus {\n    border-bottom: 1px solid ${p => p.theme.colors.gray};\n  }\n  & .react-datepicker {\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.normal};\n  }\n  & input {\n    border: none;\n    color: red;\n    width: 100%;\n    outline: none;\n    /* padding-left: 20px; */\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n  & .react-datepicker__day {\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n  & .react-datepicker__day--selected {\n    color: white;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    color: white;\n  }\n`;\nexport const DateIcon = styled.svg`\n  display: block;\n  width: 24px;\n  height: 24px;\n`;\n","import DatePicker from 'react-datepicker';\nimport { DataPickerWrapper, DateIcon } from './ModalAddDatePicker.styled';\nimport sprite from '../../assets/images/icons.svg';\n\nconst ModalAddDatePicker = ({ values, setFieldValue }) => {\n  return (\n    <DataPickerWrapper>\n      <DatePicker\n        name=\"date\"\n        required\n        selected={values.date}\n        onChange={date => {\n          setFieldValue('date', date);\n        }}\n        dateFormat=\"dd.MM.yyyy\"\n      />\n      <DateIcon>\n        <use href={`${sprite}#icon-date_range`}></use>\n      </DateIcon>\n    </DataPickerWrapper>\n  );\n};\n\nexport default ModalAddDatePicker;\n","import { useFormik } from 'formik';\nimport sprite from '../../assets/images/icons.svg';\nimport {\n  AddForm,\n  Overlay,\n  Modal,\n  Title,\n  Button,\n  CancelButton,\n  Input,\n  Comment,\n  CloseIcon,\n  CloseBox,\n  DateSumWrap,\n  SumInput,\n  CommentLabel,\n} from './ModalAddTransactions.styled';\nimport { Tab } from 'components/MediaWraper/MediaWraper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from 'redux/transactions/transactionsSlice';\nimport {\n  isModalAddTransactionOpen,\n  modalIsIncome,\n  selectTransactionCategories,\n} from 'redux/transactions/transactionsSelectors';\nimport { createTransaction } from 'redux/transactions/transactionsOperation';\nimport { useEffect } from 'react';\n// import Header from 'components/Header';\n// import { useMediaQuery } from 'react-responsive';\nimport ModalAddSwitch from 'components/ModalAddSwitch/ModalAddSwitch';\nimport ModalAddSelect from 'components/ModalAddSelect/ModalAddSelect';\nimport ModalAddDatePicker from 'components/ModalAddDatePicker/ModalAddDatePicker';\nimport { validationSchemaAddTransaction } from 'utility/validationSchema';\n\nconst ModalAddTransactions = () => {\n  const dispatch = useDispatch();\n  const isIncome = useSelector(modalIsIncome);\n  const categories = useSelector(selectTransactionCategories);\n  const isModalOpen = useSelector(isModalAddTransactionOpen);\n  // const isMobileScreen = useMediaQuery({ maxWidth: 767 });\n  const initialValues = {\n    category: '',\n    type: 'EXPENSE',\n    sum: '',\n    comment: '',\n    date: new Date(),\n  };\n  const handleFormSubmit = values => {\n    console.log(values);\n    const categoryId = getCategoryId(values);\n\n    const formatDate =\n      values.date.toLocaleDateString('en-us', { year: 'numeric' }) +\n      '-' +\n      values.date.toLocaleDateString('en-us', { month: '2-digit' }) +\n      '-' +\n      values.date.toLocaleDateString('en-us', { day: '2-digit' });\n\n    const transaction = {\n      transactionDate: formatDate,\n      type: values.type,\n      categoryId,\n      comment: values.comment,\n      amount: values.type === 'INCOME' ? +values.sum : +values.sum * -1,\n    };\n    console.log(transaction);\n    // TODO ресет значений по умолчанию\n    dispatch(createTransaction(transaction));\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchemaAddTransaction,\n    onSubmit: handleFormSubmit,\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  const getOptions = () => {\n    return categories\n      .filter(category => category.type === 'EXPENSE')\n      .map(category => {\n        return { value: category.name, label: category.name };\n      });\n  };\n\n  const getCategoryId = values => {\n    if (values.type === 'INCOME') {\n      return categories.find(elem => elem.type === 'INCOME').id;\n    }\n    return categories.find(elem => elem.name === values.category.value).id;\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeModal());\n    }\n  };\n\n  const options = getOptions();\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const handleClose = e => {\n      if (e.code === 'Escape') {\n        dispatch(closeModal());\n      }\n    };\n    window.addEventListener('keydown', handleClose);\n    return () => {\n      window.removeEventListener('keydown', handleClose);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isModalOpen, dispatch]);\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <Modal>\n        <Tab>\n          <CloseBox\n            onClick={() => {\n              dispatch(closeModal());\n            }}\n          >\n            <CloseIcon>\n              <use href={`${sprite}#icon-close`}></use>\n            </CloseIcon>\n          </CloseBox>\n        </Tab>\n        <Title>Add transaction</Title>\n        <AddForm onSubmit={formik.handleSubmit}>\n          <ModalAddSwitch\n            values={formik.values}\n            setFieldValue={formik.setFieldValue}\n          />\n\n          {!isIncome && (\n            <ModalAddSelect\n              options={options}\n              values={formik.values}\n              setFieldValue={formik.setFieldValue}\n            />\n          )}\n          <DateSumWrap>\n            <div>\n              <label>\n                <SumInput\n                  type=\"number\"\n                  name=\"sum\"\n                  placeholder=\"0.00\"\n                  {...formik.getFieldProps('sum')}\n                />\n                {formik.touched.sum && formik.errors.sum ? (\n                  <p>{formik.errors.sum}</p>\n                ) : null}\n              </label>\n            </div>\n            <ModalAddDatePicker\n              values={formik.values}\n              setFieldValue={formik.setFieldValue}\n            />\n          </DateSumWrap>\n          <CommentLabel>\n            <Comment>Comment</Comment>\n            <Input\n              type=\"text\"\n              name=\"comment\"\n              {...formik.getFieldProps('comment')}\n            />\n            {formik.touched.comment && formik.errors.comment ? (\n              <p>{formik.errors.comment}</p>\n            ) : null}\n          </CommentLabel>\n          <Button type=\"submit\">ADD</Button>\n          <CancelButton\n            type=\"button\"\n            onClick={() => {\n              dispatch(closeModal());\n            }}\n          >\n            CANCEL\n          </CancelButton>\n        </AddForm>\n      </Modal>\n    </Overlay>\n  );\n};\n\nexport default ModalAddTransactions;\n","import * as Yup from 'yup';\n\nexport const validationSchemaLogin = Yup.object().shape({\n  email: Yup.string().email('Incorrect email').required('Missing email'),\n  password: Yup.string()\n    .min(6, 'Password should be 8 chars minimum')\n    .max(12, 'Password should be 12 chars maximum')\n    .required('Missing password'),\n});\n\nexport const validationSchemaRegister = Yup.object()\n  .shape({\n    confirmPassword: Yup.string()\n      .required('Please retype your password')\n      .oneOf([Yup.ref('password')], 'Your passwords do not match.'),\n    firstName: Yup.string()\n      .min(1)\n      .max(12, 'First name should be 12 chars maximum.')\n      .required('Missing first name'),\n  })\n  .concat(validationSchemaLogin);\n\nexport const validationSchemaAddTransaction = Yup.object().shape({\n  sum: Yup.number().required('Sum required'),\n  email: Yup.string().email('Incorrect email').required('Missing email'),\n  password: Yup.string()\n    .min(6, 'Password should be 6 chars minimum')\n    .max(12, 'Password should be 12 chars maximum')\n    .required('Missing password'),\n});\n"],"names":["AddBtn","styled","props","icon","p","theme","colors","black","pink","green","radii","round","Icon","onClickAction","onClick","href","sprite","Mob","children","maxWidth","Tab","minWidth","Overlay","Modal","background","white","md","AddForm","Title","fonts","secondary","fontSizes","l","fontWeights","normal","lineHeights","main","Button","CancelButton","blue","Input","grayIcon","m","gray","Comment","inputColor","bold","s","CloseBox","CloseIcon","DateSumWrap","SumInput","CommentLabel","Field","IconBox","SwitchIcon","SwitchLabel","SwitchText","values","setFieldValue","isIncome","useSelector","modalIsIncome","dispatch","useDispatch","switchTextColor","inc","exp","htmlFor","name","value","type","checked","onChange","event","setIsIncome","category","handleDiameter","offColor","onColor","offHandleColor","onHandleColor","height","width","border","boxShadow","activeBoxShadow","uncheckedIcon","uncheckedHandleIcon","checkedIcon","checkedHandleIcon","className","id","options","customStyles","menu","provided","overflow","backgroundColor","backdropFilter","borderRadius","outline","option","state","borderBottom","color","isFocused","padding","cursor","control","borderColor","placeholder","container","indicatorSeparator","display","styles","data","required","DataPickerWrapper","DateIcon","selected","date","dateFormat","categories","selectTransactionCategories","isModalOpen","isModalAddTransactionOpen","initialValues","sum","comment","Date","formik","useFormik","validationSchema","validationSchemaAddTransaction","onSubmit","console","log","categoryId","getCategoryId","transaction","transactionDate","toLocaleDateString","year","month","day","amount","createTransaction","validateOnBlur","validateOnChange","find","elem","filter","map","label","useEffect","document","body","style","handleClose","e","code","closeModal","window","addEventListener","removeEventListener","target","currentTarget","handleSubmit","getFieldProps","touched","errors","validationSchemaLogin","Yup","shape","email","password","min","max","validationSchemaRegister","confirmPassword","oneOf","firstName","concat"],"sourceRoot":""}