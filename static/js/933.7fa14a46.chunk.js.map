{"version":3,"file":"static/js/933.7fa14a46.chunk.js","mappings":"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","sources":["components/RegistrationWrapper/RegistrationWrapper.styled.js","components/TitleThumb/TitleThumb.styled.js","components/TitleThumb/TitleThumb.jsx","components/RegistrationWrapper/RegistrationWrapper.jsx","components/ProgressBar/ProgressBar.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/RegistrationPage.jsx","utility/validationSchema.js"],"sourcesContent":["import styled from 'styled-components';\nimport VioletSpot from '../../assets/images/background-bottom.png';\nimport PinkSpot from '../../assets/images/background-top.png';\n\nexport const Body = styled.div`\n  background-color: #ffffff;\n  @media (min-width: 768px) {\n    padding-top: 60px;\n    padding-bottom: 48px;\n    background-color: #e5e5e5;\n    overflow: hidden;\n    background-image: url(${VioletSpot}), url(${PinkSpot});\n    background-repeat: no-repeat, no-repeat;\n    background-position: -133.33px 655px, 396.41px -123px;\n    @media (min-width: 1280px) {\n      display: flex;\n      padding: 0;\n      height: 100vh;\n      background-position: -150.33px 305px, 756.41px -143px;\n    }\n  }\n`;\n\nexport const Backdrop = styled.div`\n\n@media (min-width: 1280px) {\nbox-sizing: border-box;\nheight: 100%;\nwidth: 57%;\npadding-top: 52px;\npadding-bottom: 52px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: rgba(255, 255, 255, 0.4);\nbackdrop-filter: blur(25px);\n-webkit-backdrop-filter: blur(25px);}\n`\n\n\nexport const Section = styled.section`\n  box-sizing: border-box;\n  padding: 20px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n  width: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: #ffffff;\n\n  @media (max-width: 767px) {\n    height: 100vh;\n  }\n  @media (min-width: 768px) {\n    width: 533px;\n    padding-top: 40px;\n    padding-bottom: 60px;\n    border-radius: 20px;\n    min-width: auto;\n    min-height: auto;\n    overflow: hidden;\n  }\n  @media (min-width: 1280px) {\n    width: 533px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Box = styled.div`\nmargin-right: auto;\nmargin-left: auto;\nwidth: 533px;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\n\n\n@media (max-width: 1279px) {\nmargin-bottom: 50px;\n\n}\n@media (min-width: 1280px) {\nwidth: 43%;\nflex-direction: column;\njustify-content: center;\n}\n`\n\nexport const PrimarySvg = styled.svg`\nwidth: 260px;\nheight: 250px;\n\n@media (max-width: 1279px) {\n    margin-right: 40px;\n\n}\n@media (min-width: 1280px) {\n    width: 452px;\n    height: 412px;\n    margin-bottom: 32px;\n}\n`\n\nexport const Title = styled.h1`\nfont-size: 30px;\nfont-weight: 400;\nline-height: 1.5;\nmargin: 0;\n`","import { useParams} from \"react-router-dom\";\nimport svgIcon from \"../../assets/images/icons.svg\";\nimport { PrimarySvg, Box, Title } from \"./TitleThumb.styled\";\n// import { LoginForm } from \"components/Forms\";\n\nexport const TitleThumb = () => {\n    const { authType } = useParams();\n\n    const iconDefine = () => {\nswitch (authType) {\n    case 'login':\n        return \"#frame-1\";\n\n    default:\n       return \"#frame-2\";\n}\n    }\n\n\n    return(\n    <Box > \n        <PrimarySvg>\n        <use href={svgIcon + iconDefine()}></use>\n        </PrimarySvg>\n        <Title>Finance App</Title>\n    </Box>)\n}","import { Section, Backdrop, Body } from './RegistrationWrapper.styled';\nimport { TitleThumb } from 'components/TitleThumb';\nimport { useMediaQuery } from 'react-responsive';\n\n\nexport const RegistrationWrapper = ({children}) => {\n    const isTabletOrBigScreen = useMediaQuery({ minWidth: 768 });\n    return (\n    <Body>\n        {isTabletOrBigScreen && <TitleThumb />}\n        <Backdrop>\n        <Section>\n            {children}\n        </Section>\n        </Backdrop>\n    </Body>\n    )\n}","import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n// >= 100 ? 0 : prevProgress\nexport function LinearWithValueLabel({values}) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n      setProgress((values.confirmPassword.length/values.password.length)*100);\n      console.log(+values.confirmPassword)\n      console.log(+values.password)\n      console.log((+values.confirmPassword/+values.password))\n  }, [values]);\n \n  return (\n    <Box sx={{ width: '100%' }}>\n      <LinearProgressWithLabel value={progress} />\n    </Box>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\nmargin-top: 60px;\n@media (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n   \n}\n` \n \nexport const Label = styled.label`\nmargin-bottom: 40px;\ncolor: #E0E0E0;\nposition: relative;\ndisplay: block;\n@media (min-width: 768px) {\n    width: 75%;\n \n  }\n\n`\n\nexport const Placeholder = styled.span`\ncolor: currentColor;\nposition: absolute;\ntop: -3px;\nleft: 50px;\nfont-size: 18px;\ntransition: color 250ms linear, transform 250ms linear, font-size 250ms linear;\n`\nexport const IconSvg = styled.svg`\nwidth: 24px;\nheight: 24px;\nfill: currentColor;\nposition: absolute;\ntop: -3px;\nleft: 10px;\ntransition:  color 250ms linear;\n`\n\nexport const Input = styled.input`\nwidth: 100%;\nbox-sizing: border-box;\nheight: 24px;\nfont-size: 18px;\npadding-bottom: 5px;\npadding-left: 50px;\nborder: none;\nborder-bottom: 1px solid #E0E0E0;\noutline-style: none;\ntransition: border-color 250ms linear;\n&:focus, &:not(:placeholder-shown){\n    border-bottom: 1px solid #000000;  \n}\n&:focus + ${IconSvg},\n&:not(:placeholder-shown) + ${IconSvg} {\n    color: #000000;\n}\n\n&:focus~ ${Placeholder},\n&:not(:placeholder-shown)~ ${Placeholder} {\n    color: #000000;\n    transform: translateY(-20px);\n    font-size: 12px;\n}\n\n@media (min-width: 768px) {\n    width: 100%;\n    }\n`\n\n\n\nexport const Button = styled.button`\n    width: 100%;\n    height: 50px;\n   \n    padding: 0;\n    background-color: #ffffff;\n    color: #4A56E2;\n    border: 1px solid #4A56E2;\n    border-radius: 20px;\n    letter-spacing: 0.1rem;\n    font-size: 18px;\n    line-height: 1.5;\n    transition: color 250ms linear, box-shadow 250ms linear, border-color 250ms linear;\n    &:hover,\n    &:focus{\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n        color: #24CCA7;\n        border-color: #24CCA7;\n    }\n\n    @media (min-width: 768px) {\n        width: 300px;\n  }\n`\n\nexport const ActiveButton = styled(Button)`\n    color: #ffffff;\n    background-color: #24CCA7;\n    border: 1px solid #24CCA7;\n    margin-bottom: 40px;\n    transition: background-color 250ms linear, box-shadow 250ms linear, border-color 250ms linear;\n    &:hover,\n    &:focus{\n        color: #ffffff;\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n        background-color: #4A56E2;\n        border-color: #4A56E2;\n    }\n`\n\nexport const ErrorBox = styled.div`\ncolor: red;\nposition: absolute;\nfont-size: 14px;\nmargin-left: 10px;\n`\n\nexport const ErrorSvg = styled.svg`\nwidth: 16px;\nheight: 16px;\nfill: red;\nposition: absolute;\ntop: -25px;\nleft: 330px;\n`","import { useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { registerUser, loginUser } from 'redux/auth/authOperation';\nimport { ProgressBar } from '../ProgressBar';\nimport {\n  validationSchemaLogin,\n  validationSchemaRegister,\n} from 'utility/validationSchema';\n\nimport svgIcon from '../../assets/images/icons.svg';\nimport {\n  Input,\n  Label,\n  Placeholder,\n  IconSvg,\n  Button,\n  ActiveButton,\n  StyledForm,\n  ErrorBox,\n  ErrorSvg,\n} from './Form.styled';\n\nexport const Form = () => {\n  const { authType } = useParams();\n\n  const FormDefine = () => {\n    const formFields = ['email', 'password', 'confirmPassword', 'firstName'];\n    switch (authType) {\n      case 'login':\n        return [...formFields.slice(0, 2)];\n\n      default:\n        return [...formFields];\n    }\n  };\n\n  function transformText(string) {\n    let newSentence = [];\n    [...string].forEach((item, index) => {\n      if (index === 0) {\n        newSentence.push(item.toUpperCase());\n      } else\n        item.toLowerCase() === item\n          ? newSentence.push(item)\n          : newSentence.push(' ', item.toLowerCase());\n    });\n    return newSentence.join('');\n  }\n\n  const buttonTextActive = authType === 'login' ? 'REGISTER' : 'LOG IN';\n  const buttonText = authType === 'login' ? 'LOG IN' : 'REGISTER';\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const navi = () => {\n    navigate(authType === 'login' ? '/auth/registration' : '/auth/login');\n  };\n\n  const typeVar = name => {\n    switch (name) {\n      case 'password':\n      case 'confirmPassword':\n        return 'password';\n      default:\n        return 'text';\n    }\n  };\n\n  const onSubmit = (\n    { email, password, firstName: username },\n    { resetForm }\n  ) => {\n    authType === 'login'\n      ? dispatch(registerUser({ email, password, username }))\n      : dispatch(loginUser({ email, password }));\n    resetForm();\n  };\n\n  const handleClick = () => {\n    navi();\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n    },\n    validationSchema:\n      authType === 'login' ? validationSchemaLogin : validationSchemaRegister,\n    onSubmit,\n    validateOnChange: false,\n    validateOnBlur: false,\n  });\n  console.log(formik);\n\n  function checkedOnEmpty() {\n    return formik.values.password !== 0 && formik.values.confirmPassword !== 0;\n  }\n  function checkedCoincidence() {\n    return (\n      formik.values.password.slice(0, formik.values.confirmPassword.length) ===\n      formik.values.confirmPassword\n    );\n  }\n\n  return (\n    <StyledForm style={{ marginTop: '60px' }} onSubmit={formik.handleSubmit}>\n      {FormDefine().map(item => {\n        return (\n          <Label name={item} key={item}>\n            <Input\n              type={typeVar(item)}\n              name={item}\n              placeholder=\" \"\n              {...formik.getFieldProps(item)}\n              autoComplete=\"true\"\n            />\n            <IconSvg>\n              <use href={svgIcon + `#icon-${item}`}></use>\n            </IconSvg>\n            <Placeholder>{transformText(item)}</Placeholder>\n            {formik.touched[item] && formik.errors[item] ? (\n              <ErrorBox>\n                {formik.errors[item]}{' '}\n                <ErrorSvg>\n                  <use href={svgIcon + `#icon-cancel-circle`}></use>\n                </ErrorSvg>\n              </ErrorBox>\n            ) : null}\n            {item === 'confirmPassword' &&\n              checkedOnEmpty() &&\n              (checkedCoincidence() ? (\n                <ProgressBar values={formik.values} />\n              ) : (\n                <ErrorBox>Your passwords do not match</ErrorBox>\n              ))}\n          </Label>\n        );\n      })}\n\n      <ActiveButton type=\"submit\">{buttonTextActive}</ActiveButton>\n      <Button type=\"button\" onClick={handleClick}>\n        {buttonText}\n      </Button>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","\nimport { RegistrationWrapper } from \"components/RegistrationWrapper\";\nimport Logo from \"../components/Logo/Logo\";\nimport { Form } from \"components/Form\";\n\n\n\n\nexport const RegistrationPage = () => {\n        return (\n            <RegistrationWrapper>\n                <Logo />\n                <Form />\n            </RegistrationWrapper>\n        )\n\n\n};\n\nexport default RegistrationPage;\n","import * as Yup from 'yup';\n\nexport const validationSchemaLogin = Yup.object().shape({\n  email: Yup.string().email('Incorrect email').required('Missing email'),\n  password: Yup.string()\n    .min(6, 'Password should be 8 chars minimum')\n    .max(12, 'Password should be 12 chars maximum')\n    .required('Missing password'),\n});\n\nexport const validationSchemaRegister = Yup.object()\n  .shape({\n    confirmPassword: Yup.string()\n      .required('Please retype your password')\n      .oneOf([Yup.ref('password')], 'Your passwords do not match.'),\n    firstName: Yup.string()\n      .min(1)\n      .max(12, 'First name should be 12 chars maximum.')\n      .required('Missing first name'),\n  })\n  .concat(validationSchemaLogin);\n\nexport const validationSchemaAddTransaction = Yup.object().shape({\n  sum: Yup.number().required('Sum required'),\n  email: Yup.string().email('Incorrect email').required('Missing email'),\n  password: Yup.string()\n    .min(6, 'Password should be 6 chars minimum')\n    .max(12, 'Password should be 12 chars maximum')\n    .required('Missing password'),\n});\n"],"names":["Body","styled","VioletSpot","PinkSpot","Backdrop","Section","Box","PrimarySvg","Title","TitleThumb","authType","useParams","href","svgIcon","RegistrationWrapper","children","isTabletOrBigScreen","useMediaQuery","minWidth","LinearProgressWithLabel","props","sx","display","alignItems","width","mr","LinearProgress","variant","Typography","color","Math","round","value","LinearWithValueLabel","values","useState","progress","setProgress","useEffect","confirmPassword","length","password","console","log","StyledForm","Label","Placeholder","IconSvg","Input","Button","ActiveButton","ErrorBox","ErrorSvg","Form","transformText","string","newSentence","forEach","item","index","push","toUpperCase","toLowerCase","join","buttonTextActive","buttonText","dispatch","useDispatch","navigate","useNavigate","typeVar","name","formik","useFormik","initialValues","email","firstName","validationSchema","validationSchemaLogin","validationSchemaRegister","onSubmit","username","resetForm","registerUser","loginUser","validateOnChange","validateOnBlur","style","marginTop","handleSubmit","formFields","slice","FormDefine","map","type","placeholder","getFieldProps","autoComplete","touched","errors","onClick","RegistrationPage","Logo","Yup","shape","required","min","max","oneOf","concat","validationSchemaAddTransaction","sum"],"sourceRoot":""}