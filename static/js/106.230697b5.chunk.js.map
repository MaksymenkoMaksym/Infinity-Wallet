{"version":3,"file":"static/js/106.230697b5.chunk.js","mappings":"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","sources":["components/DashboardPage/DashboardPage.styled.js","components/EmptyTransactions/EmptyTransactions.styled.js","components/EmptyTransactions/EmptyTransactions.jsx","hooks/sortedTtransactions.js","components/DashboardPage/MobileDashboard.js","components/DashboardPage/LaptopDashboard.js","components/DashboardPage/DashboardPage.js","components/HomeTable/HomeTable.styled.js","components/HomeTable/HomeTable.jsx","pages/HomePage.jsx","utility/toastFunction.js","utility/hoooks.js"],"sourcesContent":["import styled from 'styled-components';\n///////home\n\nconst UlBoard = styled.ul`\n  margin: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  background: transparent;\n`;\n\n//////////////////////////////////for mobile\n\nconst PName = styled.span`\n  margin: 0;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.main};\n  @media (min-width: 768px) {\n    &:nth-child(1) {\n      width: 60px;\n    }\n    &:nth-child(2) {\n      width: 40px;\n      margin-left: 45px;\n      text-align: center;\n    }\n    &:nth-child(3) {\n      width: 70px;\n      margin-left: 40px;\n    }\n    &:nth-child(4) {\n      width: 120px;\n      margin-left: 68px;\n    }\n    &:nth-child(5) {\n      width: 40px;\n      margin-left: 30px;\n      text-align: right;\n    }\n    &:nth-child(6) {\n      width: 120px;\n      // margin-left: 60px;\n      text-align: right;\n    }\n  }\n`;\nconst PValue = styled.p`\n  margin: 0;\n  font-weight: ${props => props.theme.fontWeights.normal};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.main};\n  color: ${props =>\n    props.transaction === 'INCOME'\n      ? props.theme.colors.green\n      : props.transaction === 'EXPENSE'\n      ? props.theme.colors.pink\n      : props.theme.colors.black};\n`;\n\nconst DivItem = styled.div`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: space-between;\n\n  border-left: 5px solid\n    ${props =>\n      props.transaction === 'INCOME'\n        ? props.theme.colors.green\n        : props.theme.colors.pink};\n\n  padding: 12px ${props => props.theme.space[2]}px 8px;\n  list-style: none;\n  border-bottom: 1px solid #dcdcdf;\n  align-items: baseline;\n\n  &:last-child {\n    border-bottom: ${props => props.theme.borders.none};\n  }\n\n  @media (min-width: 768px) {\n    border-left: ${props => props.theme.borders.none};\n    border-bottom: ${props => props.theme.borders.none};\n    padding: 0px;\n    width: 100px;\n    align-items: center;\n    justify-content: center;\n  }\n`;\nconst Li = styled.li`\n  overflow: hidden;\n  border-radius: ${props => props.theme.radii.sm};\n  padding: 0;\n  margin-bottom: 8px;\n  min-width: 280px;\n  background: ${props => props.theme.colors.white};\n`;\n\n////////////////////////////////////for laptop\n\nconst Block = styled.div`\n  // margin-top: 60px;\n  // overflow: scroll;\n  overflow-y: scroll;\n  height: 650px;\n  @media (min-width: 1280px) {\n    height: 500px;\n  }\n`;\n\nconst LiTablet = styled.li`\n  list-style: none;\n  // position: reletive;\n`;\n\nconst UlTitle = styled.div`\n  display: flex;\n\n  flex-direction: row;\n  justify-content: space-between;\n\n  background: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.lg};\n  padding: 15px 20px;\n  align-items: center;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.main};\n\n  position: sticky;\n`;\nconst DivTablet = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 15px 20px;\n  &:not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst PList = styled.p`\n  margin: 0;\n  padding: 0;\n  font-weight: ${props => props.theme.fontWeights.normal};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.main};\n  &:nth-child(1) {\n    width: 60px;\n  }\n  &:nth-child(2) {\n    width: 40px;\n    margin-left: 45px;\n    text-align: center;\n  }\n  &:nth-child(3) {\n    width: 70px;\n    margin-left: 40px;\n  }\n  &:nth-child(4) {\n    width: 120px;\n    margin-left: 68px;\n  }\n  &:nth-child(5) {\n    width: 40px;\n    margin-left: 30px;\n    text-align: right;\n  }\n  &:nth-child(6) {\n    width: 120px;\n    // margin-left: 60px;\n    text-align: right;\n  }\n`;\n\nconst Sum = styled.span`\n  margin: 0;\n  color: ${props =>\n    props.transaction === 'INCOME'\n      ? props.theme.colors.green\n      : props.theme.colors.pink};\n`;\n\nexport {\n  LiTablet,\n  PName,\n  Li,\n  DivTablet,\n  PValue,\n  DivItem,\n  Sum,\n  PList,\n  UlTitle,\n  UlBoard,\n  Block,\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport img from '../../assets/images/background-bottom.png';\nimport imgPerson from '../../assets/images/login-pic-lg@2x.png';\nconst example = keyframes`\n 0% { opacity: 0.3; }\n 30% {  opacity: 0.6 }\n 40% {  opacity: 0.8; }\n 100% { opacity: 1; }\n`;\nconst DivTable = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  @media (min-width: 1280px) {\n    width: 700px;\n    height: 900px;\n  }\n`;\nconst Text = styled.div`\n  padding: 0 15px;\n  // background: #4a56e2;\n\n  width: 280px;\n  height: 150px;\n  display: flex;\n  background-image: url(${img});\n  background-size: 280px 150px;\n  background-repeat: no-repeat;\n  color: white;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.main};\n\n  animation-name: ${example};\n  animation-duration: 4s;\n\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.l};\n    background-size: 380px 180px;\n    width: 380px;\n    height: 180px;\n    margin-top: 100px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  @media (min-width: 1280px) {\n    margin-top: 20px;\n    margin-right: 0;\n    margin-left: 0;\n  }\n`;\nconst Picture = styled.div`\n  @media (min-width: 1280px) {\n    width: 650px;\n    height: 700px;\n    background-size: 650px 700px;\n    background-image: url(${imgPerson});\n    background-repeat: no-repeat;\n  }\n`;\nconst Name = styled.span`\n  font-size: ${props => props.theme.fontSizes.l};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  color: #4a56e2;\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xl};\n  }\n`;\nconst NameP = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  &:last-child {\n    margin-bottom: 30px;\n  }\n\n  @media (min-width: 768px) {\n  }\n`;\n\nconst LogoIcon = styled.svg`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  margin-right: 16px;\n\n  @media (min-width: 768px) {\n  }\n`;\nexport { DivTable, Name, NameP, LogoIcon, Picture, Text };\n","import {\n  DivTable,\n  Name,\n  NameP,\n  LogoIcon,\n  Picture,\n  Text,\n} from './EmptyTransactions.styled';\nimport logo from '../../assets/images/icons.svg';\nconst EmptyTransactions = () => (\n  <DivTable>\n    <Text>\n      <NameP>\n        Welcome to your <br></br>\n        <Name>\n          <LogoIcon>\n            <use href={logo + `#icon-logo`}></use>\n          </LogoIcon>\n          WALLET\n        </Name>\n      </NameP>\n      <NameP>Please add a transaction!</NameP>\n    </Text>\n    <Picture />\n  </DivTable>\n);\n\nexport default EmptyTransactions;\n","// import { useSelector } from 'react-redux';\n// import { selectTransactions } from 'redux/transactions/transactionsSelectors';\nimport { useHookTransaction } from 'hooks';\n\nconst useSortedTtransactions = () => {\n  const { transactions } = useHookTransaction();\n  if (transactions.length === 0) {\n    return;\n  } else if (transactions.length === 1) {\n    return transactions;\n  } else {\n    return [...transactions].sort((a, b) =>\n      b.transactionDate.localeCompare(a.transactionDate)\n    );\n  }\n};\nexport default useSortedTtransactions;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { format } from 'date-fns';\nimport { selectTransactionCategories } from 'redux/transactions/transactionsSelectors';\nimport {\n  Li,\n  DivItem,\n  PName,\n  PValue,\n  // Sum\n} from './DashboardPage.styled';\nimport EmptyTransactions from '../EmptyTransactions/EmptyTransactions';\nimport useSortedTtransactions from 'hooks/sortedTtransactions';\nimport ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { deleteTransaction } from 'redux/transactions/transactionsOperation';\nimport { addModalData } from 'redux/transactions/transactionsSlice';\n\nconst MobileDashboard = () => {\n  const transactions = useSortedTtransactions();\n  const categories = useSelector(selectTransactionCategories);\n  //edit btn & delete btn func\n  const dispatch = useDispatch();\n\n  const deleteActionBtn = id => {\n    dispatch(deleteTransaction(id));\n  };\n  const editActionBtn = item => {\n    dispatch(addModalData(item));\n  };\n\n  return (\n    <>\n      {transactions ? (\n        transactions.map(item => {\n          return (\n            <Li key={item.id}>\n              <DivItem transaction={item.type}>\n                <PName> Date</PName>\n                <PValue>\n                  {format(new Date(item.transactionDate), 'dd.MM.yy')}\n                </PValue>\n              </DivItem>\n\n              <DivItem transaction={item.type}>\n                <PName> Type</PName>\n                <PValue>{item.type === 'INCOME' ? '+' : '-'}</PValue>\n              </DivItem>\n\n              <DivItem transaction={item.type}>\n                <PName> Category</PName>\n                <PValue>\n                  {categories.map(\n                    cat => cat.id === item.categoryId && cat.name\n                  )}\n                </PValue>\n              </DivItem>\n\n              <DivItem transaction={item.type}>\n                <PName> Comment</PName>\n                <PValue> {item.comment}</PValue>\n              </DivItem>\n\n              <DivItem transaction={item.type}>\n                <PName> Sum</PName>\n                <PValue transaction={item.type}>\n                  {item.amount < 0\n                    ? item.amount.toFixed(2) * -1\n                    : item.amount.toFixed(2)}\n                </PValue>\n              </DivItem>\n\n              <DivItem transaction={item.type}>\n                <PName> Balance</PName>\n                <PValue>{item.balanceAfter.toFixed(2)}</PValue>\n              </DivItem>\n              <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                <ButtonAddTransactions\n                  icon=\"delete\"\n                  onClickAction={() => {\n                    deleteActionBtn(item.id);\n                  }}\n                />\n                <ButtonAddTransactions\n                  icon=\"edit\"\n                  onClickAction={() => {\n                    editActionBtn(item);\n                  }}\n                />\n              </div>\n            </Li>\n          );\n        })\n      ) : (\n        <EmptyTransactions />\n      )}\n    </>\n  );\n};\nexport default MobileDashboard;\n","import { useSelector } from 'react-redux';\n\nimport { format } from 'date-fns';\nimport {\n  Sum,\n  UlTitle,\n  DivTablet,\n  PList,\n  LiTablet,\n  PName,\n  Block,\n} from './DashboardPage.styled';\nimport EmptyTransactions from '../EmptyTransactions';\nimport { selectTransactionCategories } from '../../redux/transactions/transactionsSelectors';\nimport useSortedTtransactions from 'hooks/sortedTtransactions';\n\nconst LaptopDashboard = () => {\n  const transactions = useSortedTtransactions();\n  const categories = useSelector(selectTransactionCategories);\n\n  return (\n    <>\n      {transactions ? (\n        <LiTablet>\n          <UlTitle>\n            <PName>Date</PName>\n            <PName>Type</PName>\n            <PName>Category</PName>\n            <PName>Comment</PName>\n            <PName>Sum</PName>\n            <PName>Balance</PName>\n          </UlTitle>\n          <Block>\n            {transactions.map(item => {\n              return (\n                <DivTablet key={item.id}>\n                  <PList>\n                    {format(new Date(item.transactionDate), 'dd.MM.yy')}\n                  </PList>\n                  <PList>{item.type === 'INCOME' ? '+' : '-'}</PList>\n\n                  <PList>\n                    {categories.map(\n                      cat => cat.id === item.categoryId && cat.name\n                    )}\n                  </PList>\n                  <PList>{item.comment}</PList>\n                  <PList>\n                    <Sum transaction={item.type}>\n                      {item.amount < 0\n                        ? item.amount.toFixed(2) * -1\n                        : item.amount.toFixed(2)}\n                    </Sum>\n                  </PList>\n                  <PList>{item.balanceAfter.toFixed(2)}</PList>\n                </DivTablet>\n              );\n            })}\n          </Block>\n        </LiTablet>\n      ) : (\n        <EmptyTransactions />\n      )}\n    </>\n  );\n};\n\nexport default LaptopDashboard;\n","import { useSelector } from 'react-redux';\nimport { Mob, Tab } from 'components/MediaWraper/MediaWraper';\nimport MobileDashboard from './MobileDashboard';\nimport LaptopDashboard from './LaptopDashboard';\nimport Loader from 'components/Loader';\n\nimport { UlBoard } from './DashboardPage.styled';\nimport { selectIsLoadingTransaction } from 'redux/transactions/transactionsSelectors';\nconst DashboardPage = () => {\n  const isLoadingTransaction = useSelector(selectIsLoadingTransaction);\n  return (\n    <>\n      {isLoadingTransaction ? (\n        <Loader />\n      ) : (\n        <UlBoard>\n          <Mob>\n            <MobileDashboard />\n          </Mob>\n          <Tab>\n            <LaptopDashboard />\n          </Tab>\n        </UlBoard>\n      )}\n    </>\n  );\n};\n\nexport default DashboardPage;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 0 ${props => props.theme.space[2]}px;\n  margin: 0 auto;\n  max-width: 320px;\n  height: 100%;\n\n  ${props => props.theme.breakpoints.tab} {\n    padding: 0 ${props => props.theme.space[4]}px;\n    max-width: 768px;\n\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  ${props => props.theme.breakpoints.desc} {\n    padding: 0 18px;\n    max-width: 1280px;\n    display: flex;\n  }\n`;\n\nexport const DashboardBox = styled.div`\n  ${props => props.theme.breakpoints.desc} {\n    padding: 40px 0 0 69px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { useError } from 'utility/hoooks';\n\nimport HeroBar from 'components/HeroBar';\nimport DashboardPage from '../DashboardPage/DashboardPage';\nimport Container from 'components/Container';\n\nimport ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport ModalAddTransactions from 'components/ModalAddTransactions/ModalAddTransactions';\nimport {\n  isModalAddTransactionOpen,\n  selectTransactionCategories,\n} from 'redux/transactions/transactionsSelectors';\nimport {\n  getAllTransactions,\n  getTransactionCategories,\n} from 'redux/transactions/transactionsOperation';\n\nimport { Wrapper, DashboardBox } from './HomeTable.styled';\nimport { openModal } from 'redux/transactions/transactionsSlice';\n\nconst HomeTable = () => {\n  useError();\n  const dispatch = useDispatch();\n  const isModalOpen = useSelector(isModalAddTransactionOpen);\n  const categories = useSelector(selectTransactionCategories);\n\n  useEffect(() => {\n    categories.length === 0 && dispatch(getTransactionCategories());\n    dispatch(getAllTransactions());\n  }, [dispatch, categories]);\n  const onClickOpenModalAction = () => {\n    dispatch(openModal());\n    // console.log(categories);\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <HeroBar />\n        <DashboardBox>\n          <DashboardPage />\n        </DashboardBox>\n        <ButtonAddTransactions\n          onClickAction={onClickOpenModalAction}\n          icon=\"plus\"\n        />\n        {isModalOpen && <ModalAddTransactions />}\n      </Wrapper>\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default HomeTable;\n","import HomeTable from 'components/HomeTable/HomeTable';\n\nconst Home = () => <HomeTable />;\n\nexport default Home;\n","import { toast } from 'react-toastify';\n\n\n\n\nexport let authMessageCreator = auth => {\n    switch (auth) {\n        case 400:\n            return \"Validation error\";\n        case 401:\n            return \"Your token outdated\";\n        case 403:\n            return \"Provided password is incorrect\";\n        case 404:\n            return \"User with such email not found\";\n        case 409:\n            return \"User with such email already exists\";\n            default:\n                return \n        }\n}\n\nexport const transactionMessageCreator = error => {\n    switch (error) {\n        case 400:\n            return \"Validation error\";\n        case 401:\n            return \"Your token outdated\";\n        case 403:\n            return \"User does not owns transaction\";\n        case 404:\n            return \"Transaction category not found\";\n        case 409:\n            return \"Transaction category type does not match transaction type\";\n            default:\n                return \n        }\n}\n\nexport const notify = (message) => {\n    return toast.error(message, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        });\n}\n \n\n    \n\n\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  authMessageCreator,\n  transactionMessageCreator,\n  notify,\n} from 'utility/toastFunction';\n\nexport const useError = () => {\n  const authError = useSelector(state => state.auth.error);\n  const transactionError = useSelector(state => state.transaction.error);\n\n  useEffect(() => {\n    // if (!authError && !transactionError) return\n    authError && notify(authMessageCreator(authError));\n    transactionError && notify(transactionMessageCreator(transactionError));\n    // console.log(\"11234\")\n    // console.log(authError)\n    // console.log(transactionError)\n  }, [authError, transactionError]);\n};\n"],"names":["UlBoard","styled","PName","props","theme","fontWeights","bold","fontSizes","m","lineHeights","main","PValue","normal","s","transaction","colors","green","pink","black","DivItem","space","borders","none","Li","radii","sm","white","Block","LiTablet","UlTitle","lg","DivTablet","PList","Sum","example","keyframes","DivTable","Text","img","l","Picture","imgPerson","Name","xl","NameP","LogoIcon","href","logo","transactions","useHookTransaction","length","sort","a","b","transactionDate","localeCompare","useSortedTtransactions","categories","useSelector","selectTransactionCategories","dispatch","useDispatch","map","item","type","format","Date","cat","id","categoryId","name","comment","amount","toFixed","balanceAfter","style","display","justifyContent","ButtonAddTransactions","icon","onClickAction","deleteTransaction","addModalData","editActionBtn","isLoadingTransaction","selectIsLoadingTransaction","Loader","Wrapper","breakpoints","tab","desc","DashboardBox","useError","isModalOpen","isModalAddTransactionOpen","useEffect","getTransactionCategories","getAllTransactions","Container","HeroBar","openModal","ModalAddTransactions","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","authError","state","auth","error","transactionError","authMessageCreator","transactionMessageCreator"],"sourceRoot":""}