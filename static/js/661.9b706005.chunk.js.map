{"version":3,"file":"static/js/661.9b706005.chunk.js","mappings":"kMAGaA,EAAOC,EAAAA,GAAAA,GAAH,6fAab,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,GAA5B,IAeIC,EAAWL,EAAAA,GAAAA,GAAH,+HAMjB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,GAA5B,IAIIE,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mUAaJ,SAAAC,GAAK,OAAIA,EAAMC,MAAMM,MAAMC,SAAtB,IACL,SAAAR,GAAK,OAAIA,EAAMC,MAAMQ,YAAYC,IAA5B,IACP,SAAAV,GAAK,OAAIA,EAAMC,MAAMU,UAAUC,CAA1B,IACH,SAAAZ,GAAK,OAAIA,EAAMC,MAAMY,YAAYC,IAA5B,IAIXC,EAAWhB,EAAAA,GAAAA,KAAH,0MAGjB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,GAA5B,IAGU,SAAAH,GAAK,OAAIA,EAAMC,MAAMM,MAAMC,SAAtB,IACF,SAAAR,GAAK,OAAIA,EAAMC,MAAMQ,YAAYO,MAA5B,IACV,SAAAhB,GAAK,OAAIA,EAAMC,MAAMU,UAAUC,CAA1B,IACH,SAAAZ,GAAK,OAAIA,EAAMC,MAAMY,YAAYC,IAA5B,IAIXG,EAAOlB,EAAAA,GAAAA,IAAH,2LAIb,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,GAA5B,I,6BC3BT,EAzCmB,WACjB,IAAMe,GAAiBC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAC3CC,GAAsBF,EAAAA,EAAAA,eAAc,CAAEG,SAAU,MACtD,OACE,0BACE,UAACxB,EAAD,CAAMyB,UAAU,WAAhB,WACE,SAACnB,EAAD,WACE,UAACC,EAAD,CAAYmB,GAAG,IAAIC,KAAG,EAAtB,WACE,+BACE,SAACR,EAAD,WACE,gBAAKS,KAAI,UAAKC,EAAAA,EAAL,oBAGZN,IAAuB,SAACN,EAAD,yBAG5B,SAACX,EAAD,WACE,UAACC,EAAD,CAAYmB,GAAG,WAAf,WACE,+BACE,SAACP,EAAD,WACE,gBAAKS,KAAI,UAAKC,EAAAA,EAAL,wBAGZN,IAAuB,SAACN,EAAD,+BAI5B,SAACX,EAAD,UACGc,IACC,SAACb,EAAD,CAAYmB,GAAG,YAAf,UACE,SAACP,EAAD,WACE,gBAAKS,KAAI,UAAKC,EAAAA,EAAL,8BAQxB,C,4FC/BD,UAXgB,WACd,IAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAChC,OACE,iCACE,SAAC,IAAD,KACA,SAAC,IAAD,IACCF,IAAe,SAAC,IAAD,MAGrB,C,gLChBM,IAAMG,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,YAAtB,EAC1BC,EAA8B,SAAAH,GAAK,OAC9CA,EAAMC,YAAYG,qBAD4B,EAEnCC,EAA8B,SAAAL,GAAK,OAC9CA,EAAMC,YAAYK,qBAD4B,EAInCC,EAA6B,SAAAP,GAAK,OAAIA,EAAMC,YAAYO,SAAtB,EAClCV,EAA4B,SAAAE,GAAK,OAC5CA,EAAMC,YAAYH,yBAD0B,EAEjCW,EAAgB,SAAAT,GAAK,OAAIA,EAAMC,YAAYQ,aAAtB,C","sources":["components/Navigation/Navigation.styled.jsx","components/Navigation/Navigation.jsx","components/TestCom/TestCom .jsx","redux/transactions/transactionsSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  // width: 320px;\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 36px;\n  margin: 0;\n  padding: 0;\n  padding-top: 15px;\n  padding-bottom: 15px;\n\n  ${props => props.theme.breakpoints.tab} {\n    display: flex;\n    list-style: none;\n    justify-content: center;\n    align-items: flex-start;\n\n    flex-wrap: wrap;\n    gap: 12px;\n    flex-direction: column;\n    padding-top: 0;\n    // padding-left: 35px;\n    padding-bottom: 16px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: inherit;\n\n  ${props => props.theme.breakpoints.tab} {\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: inherit;\n  fill: #6e78e8;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1, 1.1);\n  }\n  &.active {\n    fill: #4a56e2;\n    font-family: ${props => props.theme.fonts.secondary};\n    font-weight: ${props => props.theme.fontWeights.bold};\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: ${props => props.theme.lineHeights.main};\n  }\n`;\n\nexport const TextItem = styled.span`\n  text-decoration: none;\n  color: inherit;\n  ${props => props.theme.breakpoints.tab} {\n    margin-left: 23px;\n\n    font-family: ${props => props.theme.fonts.secondary};\n    // font-weight: ${props => props.theme.fontWeights.normal};\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: ${props => props.theme.lineHeights.main};\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 38px;\n  height: 38px;\n\n  ${props => props.theme.breakpoints.tab} {\n    width: 18px;\n    height: 18px;\n  }\n\n  &.active {\n    box-shadow: 0px 0px 49px 0px rgba(74, 86, 226, 1);\n  }\n`;\n","import {\n  List,\n  ListItem,\n  TextItem,\n  Icon,\n  StyledLink,\n} from './Navigation.styled';\nimport sprite from '../../assets/images/icons.svg';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Navigation = () => {\n  const isMobileScreen = useMediaQuery({ maxWidth: 767 });\n  const isTabletOrBigScreen = useMediaQuery({ minWidth: 768 });\n  return (\n    <nav>\n      <List className=\"nav_list\">\n        <ListItem>\n          <StyledLink to=\"/\" end>\n            <>\n              <Icon>\n                <use href={`${sprite}#icon-home`}></use>\n              </Icon>\n            </>\n            {isTabletOrBigScreen && <TextItem>Home</TextItem>}\n          </StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink to=\"/diagram\">\n            <>\n              <Icon>\n                <use href={`${sprite}#icon-timeline`}></use>\n              </Icon>\n            </>\n            {isTabletOrBigScreen && <TextItem>Statistics</TextItem>}\n          </StyledLink>\n        </ListItem>\n\n        <ListItem>\n          {isMobileScreen && (\n            <StyledLink to=\"/currency\">\n              <Icon>\n                <use href={`${sprite}#icon-currency`}></use>\n              </Icon>\n            </StyledLink>\n          )}\n        </ListItem>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport ModalAddTransactions from 'components/ModalAddTransactions/ModalAddTransactions';\n\nimport Navigation from 'components/Navigation/Navigation';\n\nimport { useSelector } from 'react-redux';\nimport { isModalAddTransactionOpen } from 'redux/transactions/transactionsSelectors';\nconst TestCom = () => {\n  const isModalOpen = useSelector(isModalAddTransactionOpen);\n  return (\n    <>\n      <Navigation />\n      <ButtonAddTransactions />\n      {isModalOpen && <ModalAddTransactions />}\n    </>\n  );\n};\n\nexport default TestCom;\n","export const selectTransactions = state => state.transaction.transactions;\nexport const selectTransactionsForPeriod = state =>\n  state.transaction.transactionsForPeriod;\nexport const selectTransactionCategories = state =>\n  state.transaction.transactionCategories;\n\nexport const selectErrorTransaction = state => state.transaction.error;\nexport const selectIsLoadingTransaction = state => state.transaction.isLoading;\nexport const isModalAddTransactionOpen = state =>\n  state.transaction.isModalAddTransactionOpen;\nexport const modalIsIncome = state => state.transaction.modalIsIncome;\n"],"names":["List","styled","props","theme","breakpoints","tab","ListItem","StyledLink","NavLink","fonts","secondary","fontWeights","bold","fontSizes","m","lineHeights","main","TextItem","normal","Icon","isMobileScreen","useMediaQuery","maxWidth","isTabletOrBigScreen","minWidth","className","to","end","href","sprite","isModalOpen","useSelector","isModalAddTransactionOpen","selectTransactions","state","transaction","transactions","selectTransactionsForPeriod","transactionsForPeriod","selectTransactionCategories","transactionCategories","selectIsLoadingTransaction","isLoading","modalIsIncome"],"sourceRoot":""}