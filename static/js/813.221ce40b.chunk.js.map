{"version":3,"file":"static/js/813.221ce40b.chunk.js","mappings":"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","sources":["utility/toastFunction.js","hooks/useError.js","components/AuthWrapper/AuthWrapper.styled.js","components/TitleThumb/TitleThumb.styled.js","components/TitleThumb/TitleThumb.jsx","components/AuthWrapper/AuthWrapper.jsx","utility/constants.js","components/ProgressBar/ProgressBar.jsx","components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthError.jsx","components/AuthForm/AuthConfirmError.jsx","components/AuthForm/AuthForm.jsx","pages/RegistrationPage.jsx","utility/validationSchema.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\n\n\n\nexport let authMessageCreator = auth => {\n    switch (auth) {\n        case 400:\n            return \"Validation error\";\n        case 401:\n            return \"Your token outdated\";\n        case 403:\n            return \"Provided password is incorrect\";\n        case 404:\n            return \"User with such email not found\";\n        case 409:\n            return \"User with such email already exists\";\n            default:\n                return \n        }\n}\n\nexport const transactionMessageCreator = error => {\n    switch (error) {\n        case 400:\n            return \"Validation error\";\n        case 401:\n            return \"Your token outdated\";\n        case 403:\n            return \"User does not owns transaction\";\n        case 404:\n            return \"Transaction category not found\";\n        case 409:\n            return \"Transaction category type does not match transaction type\";\n            default:\n                return \n        }\n}\n\nexport const notify = (message) => {\n    return toast.error(message, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        });\n}\n \n\n    \n\n\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  authMessageCreator,\n  transactionMessageCreator,\n  notify,\n} from 'utility/toastFunction';\n\nexport const useError = () => {\n  const authError = useSelector(state => state.auth.error);\n  const transactionError = useSelector(state => state.transaction.error);\n\n    useEffect(() => {\n        if (!authError && !transactionError) return\n        authError && notify(authMessageCreator(authError));\n        transactionError && notify(transactionMessageCreator(transactionError))\n        },[authError, transactionError])\n     \n}\n","import styled from 'styled-components';\nimport VioletSpot from '../../assets/images/background-bottom.png';\nimport PinkSpot from '../../assets/images/background-top.png';\n\nexport const Body = styled.div`\n  background-color: #ffffff;\n  @media (min-width: 768px) {\n    padding-top: 60px;\n    padding-bottom: 48px;\n    background-color: #e5e5e5;\n    overflow: hidden;\n    background-image: url(${VioletSpot}), url(${PinkSpot});\n    background-repeat: no-repeat, no-repeat;\n    background-position: -133.33px 655px, 396.41px -123px;\n    @media (min-width: 1280px) {\n      display: flex;\n      padding: 0;\n      height: 100vh;\n      background-position: -150.33px 305px, 756.41px -143px;\n    }\n  }\n`;\n\nexport const Backdrop = styled.div`\n\n@media (min-width: 1280px) {\nbox-sizing: border-box;\nheight: 100%;\nwidth: 57%;\npadding-top: 52px;\npadding-bottom: 52px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: rgba(255, 255, 255, 0.4);\nbackdrop-filter: blur(25px);\n-webkit-backdrop-filter: blur(25px);}\n`\n\n\nexport const Section = styled.section`\n  box-sizing: border-box;\n  padding: 20px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n  width: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: #ffffff;\n\n  @media (max-width: 767px) {\n    height: 100vh;\n  }\n  @media (min-width: 768px) {\n    width: 533px;\n    padding-top: 40px;\n    padding-bottom: 60px;\n    border-radius: 20px;\n    min-width: auto;\n    min-height: auto;\n    overflow: hidden;\n  }\n  @media (min-width: 1280px) {\n    width: 533px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Box = styled.div`\nmargin-right: auto;\nmargin-left: auto;\nwidth: 533px;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\n\n\n@media (max-width: 1279px) {\nmargin-bottom: 50px;\n\n}\n@media (min-width: 1280px) {\nwidth: 43%;\nflex-direction: column;\njustify-content: center;\n}\n`\n\nexport const PrimarySvg = styled.svg`\nwidth: 260px;\nheight: 250px;\n\n@media (max-width: 1279px) {\n    margin-right: 40px;\n\n}\n@media (min-width: 1280px) {\n    width: 452px;\n    height: 412px;\n    margin-bottom: 32px;\n}\n`\n\nexport const Title = styled.h1`\nfont-size: 30px;\nfont-weight: 400;\nline-height: 1.5;\nmargin: 0;\n`","import { useParams} from \"react-router-dom\";\nimport svgIcon from \"../../assets/images/icons.svg\";\nimport { PrimarySvg, Box, Title } from \"./TitleThumb.styled\";\n// import { LoginForm } from \"components/Forms\";\n\nexport const TitleThumb = () => {\n    const { authType } = useParams();\n\n    const iconDefine = () => {\nswitch (authType) {\n    case 'login':\n        return \"#frame-1\";\n\n    default:\n       return \"#frame-2\";\n}\n    }\n\n\n    return(\n    <Box > \n        <PrimarySvg>\n        <use href={svgIcon + iconDefine()}></use>\n        </PrimarySvg>\n        <Title>Finance App</Title>\n    </Box>)\n}","import { Section, Backdrop, Body } from './AuthWrapper.styled';\nimport { TitleThumb } from 'components/TitleThumb';\nimport { useMediaQuery } from 'react-responsive';\n\n\nexport const AuthWrapper = ({children}) => {\n    const isTabletOrBigScreen = useMediaQuery({ minWidth: 768 });\n\n    return (\n    <Body>\n        {isTabletOrBigScreen && <TitleThumb />}\n        <Backdrop>\n        <Section>\n            {children}\n        </Section>\n        </Backdrop>\n    </Body>\n    )\n}","export const LoginOptions = [\n    {\n      label: \"Email\",\n      type: \"text\",\n      name: \"email\",\n    },\n    {\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n    },\n  ];\nexport  const RegOptions = [  {\n    label: \"Email\",\n    type: \"text\",\n    name: \"email\",\n  },\n  {\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n  },\n  {\n    label: \"Confirm password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n  },\n  {\n    label: \"First name\",\n    type: \"text\",\n    name: \"firstName\",\n  },];\n  \nexport  const LoginInitValues  = {\n    email: '',\n    password: '',\n  }\n  \n export const RegInitValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n  }\n\n","import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n};\nfunction LinearWithValueLabel({values}) {\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n      setProgress((values.confirmPassword.length/values.password.length)*100);\n  }, [values]);\n \n  return (\n    <Box sx={{ width: '100%' }}>\n      <LinearProgressWithLabel value={progress} />\n    </Box>\n  );\n}\n\n\n\n// export const ProgressBarVar = ({name, values}) => {\n//   function checkedOnEmpty() {\n//     return values.password != 0 && values.confirmPassword != 0;\n//   }\n  \n//   function checkedCoincidence() {\n//     return (\n//       values.password.slice(0, values.confirmPassword.length) === values.confirmPassword\n//     );\n//   }\n//   return (checkedOnEmpty() && <ProgressBarVarVar values={values}/>)\n// }\n\nexport const ProgressBar = ({name, values}) => {\n\n  return (<LinearWithValueLabel values={values}/>)\n}\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\nmargin-top: 60px;\n@media (min-width: 768px) {\n    width: 410px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n   \n}\n` \n \nexport const Label = styled.label`\nmargin-bottom: 40px;\ncolor: #E0E0E0;\nposition: relative;\ndisplay: block;\n@media (min-width: 768px) {\n    width: 100%;\n\n \n  }\n\n`\n\nexport const Placeholder = styled.span`\ncolor: currentColor;\nposition: absolute;\ntop: -3px;\nleft: 50px;\nfont-size: 18px;\ntransition: color 250ms linear, transform 250ms linear, font-size 250ms linear;\n`\nexport const IconSvg = styled.svg`\nwidth: 24px;\nheight: 24px;\nfill: currentColor;\nposition: absolute;\ntop: -3px;\nleft: 10px;\ntransition:  color 250ms linear;\n`\n\nexport const Input = styled.input`\nwidth: 100%;\n\nbox-sizing: border-box;\nheight: 24px;\nfont-size: 18px;\npadding-bottom: 5px;\npadding-left: 50px;\nborder: none;\nborder-bottom: 1px solid #E0E0E0;\noutline-style: none;\ntransition: border-color 250ms linear;\n&:focus, &:not(:placeholder-shown){\n    border-bottom: 1px solid #000000;  \n}\n&:focus + ${IconSvg},\n&:not(:placeholder-shown) + ${IconSvg} {\n    color: #000000;\n}\n\n&:focus~ ${Placeholder},\n&:not(:placeholder-shown)~ ${Placeholder} {\n    color: #000000;\n    transform: translateY(-20px);\n    font-size: 12px;\n}\n\n@media (min-width: 768px) {\n\n    width: 100%;\n    }\n`\n\n\n\nexport const Link = styled(NavLink)`\n    width: 100%;\n    height: 50px;\n    outline: none;\n    text-decoration: none;\n    padding: 0;\n    background-color: #ffffff;\n    color: #4A56E2;\n    border: 1px solid #4A56E2;\n    border-radius: 20px;\n    letter-spacing: 0.1rem;\n    font-size: 18px;\n    line-height: 1.5;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: color 250ms linear, box-shadow 250ms linear, border-color 250ms linear;\n    &:hover,\n    &:focus{\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n        color: #24CCA7;\n        border-color: #24CCA7;\n    }\n\n    @media (min-width: 768px) {\n        width: 300px;\n  }\n`\n\nexport const Button = styled.button`\n    width: 100%;\n    height: 50px;\n    padding: 0;\n    color: #ffffff;\n    background-color: #24CCA7;\n    border: 1px solid #24CCA7;\n    border-radius: 20px;\n    letter-spacing: 0.1rem;\n    font-size: 18px;\n    line-height: 1.5;\n    margin-bottom: 40px;\n    transition: background-color 250ms linear, box-shadow 250ms linear, border-color 250ms linear;\n    &:hover,\n    &:focus{\n        color: #ffffff;\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n        background-color: #4A56E2;\n        border-color: #4A56E2;\n    }\n    @media (min-width: 768px) {\n        width: 300px;\n  }\n`\n\nexport const ErrorBox = styled.div`\ncolor: red;\nposition: absolute;\nfont-size: 14px;\nmargin-left: 10px;\n`\n\nexport const ErrorSvg = styled.svg`\nwidth: 16px;\nheight: 16px;\nfill: red;\nposition: absolute;\ntop: -25px;\nleft: 380px;\n`","import { ErrorBox, ErrorSvg } from \"./AuthForm.styled\";\nimport svgIcon from '../../assets/images/icons.svg';\nexport const AuthError = ({touched, errors, name}) => {\n    \n    return (\n        (touched[name] && errors[name]) ? \n        (<ErrorBox>\n          {errors[name]}{' '}\n        <ErrorSvg>\n            <use href={svgIcon + `#icon-cancel-circle`}></use>\n          </ErrorSvg>\n        </ErrorBox>) : null\n    )\n}","import { ProgressBar } from \"components/ProgressBar/ProgressBar\";\nimport { AuthError } from \"./AuthError\";\n\nexport const AuthConfirmError = ({touched, errors, name, values}) => {\n\n    function checkedCoincidence() {\n        return (\n          values.password.slice(0, values.confirmPassword.length) === values.confirmPassword\n        );\n      }\n\n      function checkedOnEmpty() {\n        // eslint-disable-next-line\n        return values.password != 0 && values.confirmPassword != 0;\n      }\n\n    return (\n       ( checkedOnEmpty() &&  checkedCoincidence()) ? <ProgressBar name={name} values={values}/> : <AuthError touched={touched} errors={errors} name={name}/>\n    )\n}","import { useFormik } from 'formik';\nimport { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { loginUser, registerUser } from 'redux/auth/authOperation';\nimport { LoginInitValues, RegInitValues, LoginOptions, RegOptions } from 'utility/constants';\nimport {\n  validationSchemaLogin,\n  validationSchemaRegister\n} from 'utility/validationSchema';\n\nimport svgIcon from '../../assets/images/icons.svg';\nimport { AuthConfirmError } from './AuthConfirmError';\nimport { AuthError } from './AuthError';\nimport {\n  Link, Button, IconSvg, Input,\n  Label,\n  Placeholder, StyledForm\n} from './AuthForm.styled';\n\nexport const AuthForm = () => {\n  const { authType } = useParams();\n  const location = authType === 'login';\n\n  const buttonTextActive = location ? 'LOG IN' : 'REGISTER';\n  const linkText = location ? 'REGISTER' : 'LOG IN';\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (\n    { email, password, firstName: username },\n    { resetForm }\n  ) => {\n    location\n      ? dispatch(loginUser({ email, password }))\n      : dispatch(registerUser({ email, password, username }));\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: location ? LoginInitValues : RegInitValues,\n    validationSchema: (location ? validationSchemaLogin : validationSchemaRegister),\n    onSubmit,\n    validateOnChange: false,\n    validateOnBlur: false,\n  });\n\n  const{ resetForm, touched, errors, values} = formik;\n  useEffect(()=> {\nresetForm()\n  }, [location, resetForm])\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      {(location ? LoginOptions : RegOptions).map(({name, type, label}) => {\n        return (\n          <Label name={name} key={name}>\n            <Input\n              type={type}\n              name={name}\n              placeholder=\" \"\n              {...formik.getFieldProps(name)}\n           \n            />\n            <IconSvg>\n              <use href={svgIcon + `#icon-${name}`}></use>\n            </IconSvg>\n            <Placeholder>{label}</Placeholder>\n            {(name !== 'confirmPassword') ? <AuthError touched={touched} errors={errors} name={name}/> : <AuthConfirmError touched={touched} errors={errors} name={name} values={values}/>}\n             {/* : ((name === 'confirmPassword') ? <ProgressBarVar name={name} values={values}/> : null)} */}\n          \n          </Label>\n        );\n      })}\n\n      <Button type=\"submit\">{buttonTextActive}</Button>\n      <Link  to ={location ? '/auth/registration' : '/auth/login'}>\n        {linkText}\n      </Link>\n    </StyledForm>\n  );\n};\n\nexport default AuthForm;\n","\nimport { AuthWrapper } from \"components/AuthWrapper\";\nimport Logo from \"../components/Logo/Logo\";\nimport { AuthForm } from \"components/AuthForm\";\nimport { ToastContainer} from 'react-toastify';\nimport { useError } from \"../hooks/useError\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RegistrationPage = () => {\nuseError()\n        return (\n            <>\n            <AuthWrapper>\n                <Logo />\n                <AuthForm />\n            </AuthWrapper>\n            <ToastContainer/>\n            </>\n\n        )\n\n\n};\n\nexport default RegistrationPage;\n","import * as Yup from 'yup';\n\nexport const validationSchemaLogin = Yup.object().shape({\n  email: Yup.string().email('Incorrect email').required('Missing email'),\n  password: Yup.string()\n    .min(6, 'Password should be 8 chars minimum')\n    .max(12, 'Password should be 12 chars maximum')\n    .required('Missing password'),\n});\n\nexport const validationSchemaRegister = Yup.object().shape({\n  email: Yup.string().email('Incorrect email').required('Missing email'),\n  password: Yup.string()\n    .min(6, 'Password should be 6 chars minimum')\n    .max(12, 'Password should be 12 chars maximum')\n    .required('Missing password'),\n  confirmPassword: Yup.string()\n    .required('Your passwords do not match')\n    .oneOf([Yup.ref('password')], 'Your passwords do not match'),\n  firstName: Yup.string()\n    .min(1)\n    .max(12, 'First name should be 12 chars maximum.')\n    .required('Missing first name'),\n});\n\nlet patternTwoDigisAfterComma = /^\\d+(\\.\\d{0,2})?$/;\n\nexport const validationSchemaAddTransaction = Yup.object().shape({\n  sum: Yup.number()\n    // .positive('Wrong sum!')\n    .required('Enter sum!')\n    .test('Is positive?', 'Must be greater than 0!', value => value > 0)\n    .test(\n      'is-decimal',\n      'The amount should be a decimal with maximum two digits after comma',\n      val => {\n        if (val !== undefined) {\n          return patternTwoDigisAfterComma.test(val);\n        }\n        return true;\n      }\n    ),\n  category: Yup.mixed().required('Select category!'),\n  date: Yup.date()\n    .min(new Date('1970/01/01'), 'Wrong date!')\n    .max(new Date('9999/12/31'), 'Wrong date!')\n    .required('Choose date!'),\n});\n"],"names":["notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useError","authError","useSelector","state","auth","error","transactionError","transaction","useEffect","authMessageCreator","transactionMessageCreator","Body","styled","VioletSpot","PinkSpot","Backdrop","Section","Box","PrimarySvg","Title","TitleThumb","authType","useParams","href","svgIcon","AuthWrapper","children","isTabletOrBigScreen","useMediaQuery","minWidth","LoginOptions","label","type","name","RegOptions","LoginInitValues","email","password","RegInitValues","confirmPassword","firstName","LinearProgressWithLabel","props","sx","display","alignItems","width","mr","LinearProgress","variant","Typography","color","Math","round","value","LinearWithValueLabel","values","useState","setProgress","length","ProgressBar","StyledForm","Label","Placeholder","IconSvg","Input","Link","NavLink","Button","ErrorBox","ErrorSvg","AuthError","touched","errors","AuthConfirmError","slice","AuthForm","location","buttonTextActive","linkText","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","validationSchemaLogin","validationSchemaRegister","onSubmit","username","resetForm","loginUser","registerUser","validateOnChange","validateOnBlur","handleSubmit","map","placeholder","getFieldProps","to","RegistrationPage","Logo","Yup","shape","required","min","max","oneOf","patternTwoDigisAfterComma","validationSchemaAddTransaction","sum","test","val","category","date","Date"],"sourceRoot":""}